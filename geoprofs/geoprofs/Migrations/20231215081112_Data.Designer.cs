// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using geoprofs.Data;

#nullable disable

namespace geoprofs.Migrations
{
    [DbContext(typeof(geoprofsContext))]
    [Migration("20231215081112_Data")]
    partial class Data
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("geoprofs.Models.Aanvraag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Goedkeuring")
                        .HasColumnType("int");

                    b.Property<int>("OndersteundDoor")
                        .HasColumnType("int");

                    b.Property<int>("OndersteundDoorWerknemerId")
                        .HasColumnType("int");

                    b.Property<int>("Persoonlijk")
                        .HasColumnType("int");

                    b.Property<DateTime>("TotDatum")
                        .HasColumnType("datetime2");

                    b.Property<int>("Vakantie")
                        .HasColumnType("int");

                    b.Property<DateTime>("VanafDatum")
                        .HasColumnType("datetime2");

                    b.Property<int>("WerknemerId")
                        .HasColumnType("int");

                    b.Property<int>("WerknemersId")
                        .HasColumnType("int");

                    b.Property<int>("Ziek")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OndersteundDoorWerknemerId");

                    b.HasIndex("WerknemerId");

                    b.ToTable("Aanvraag");
                });

            modelBuilder.Entity("geoprofs.Models.Positie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("PositieNaam")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Positie");
                });

            modelBuilder.Entity("geoprofs.Models.Werknemer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Achternaam")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BSN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatumIndienst")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("Persoonlijk")
                        .HasColumnType("int");

                    b.Property<int>("PositieId")
                        .HasColumnType("int");

                    b.Property<int>("SaldoVerlof")
                        .HasColumnType("int");

                    b.Property<int>("SupervisorId")
                        .HasColumnType("int");

                    b.Property<int>("Vakantie")
                        .HasColumnType("int");

                    b.Property<string>("Voornaam")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Wachtwoord")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("Ziek")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PositieId");

                    b.ToTable("Werknemer");
                });

            modelBuilder.Entity("geoprofs.Models.Aanvraag", b =>
                {
                    b.HasOne("geoprofs.Models.Werknemer", "OndersteundDoorWerknemer")
                        .WithMany()
                        .HasForeignKey("OndersteundDoorWerknemerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("geoprofs.Models.Werknemer", "Werknemer")
                        .WithMany()
                        .HasForeignKey("WerknemerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OndersteundDoorWerknemer");

                    b.Navigation("Werknemer");
                });

            modelBuilder.Entity("geoprofs.Models.Werknemer", b =>
                {
                    b.HasOne("geoprofs.Models.Positie", "Positie")
                        .WithMany()
                        .HasForeignKey("PositieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Positie");
                });
#pragma warning restore 612, 618
        }
    }
}
